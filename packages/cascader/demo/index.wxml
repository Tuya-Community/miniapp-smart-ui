<demo-block title="{{I18n.t('basicUsage')}}" class="cascader-demo">
  <smart-field
    value="{{ baseState.result }}"
    is-link
    readonly
    label="{{I18n.t('region')}}"
    placeholder="{{ selectArea }}"
    data-state-key="baseState"
    bind:tap="onClick"
  />
  <smart-bottom-sheet
    show="{{ baseState.show }}"
    max-height="100%"
  >
    <smart-cascader
      wx:if="{{ baseState.show }}"
      value="{{ baseState.value }}"
      title="{{ selectArea }}"
      options="{{ options }}"
      data-state-key="baseState"
      bind:close="onClose"
      bind:finish="onFinish"
    />
  </smart-bottom-sheet>
</demo-block>

<demo-block title="{{I18n.t('customColor')}}" class="cascader-demo">
  <smart-field
    value="{{ customColorState.result }}"
    is-link
    readonly
    label="{{I18n.t('region')}}"
    placeholder="{{ selectArea }}"
    data-state-key="customColorState"
    bind:tap="onClick"
  />
  <smart-bottom-sheet
    show="{{ customColorState.show }}"
    max-height="100%"
  >
    <smart-cascader
      wx:if="{{ customColorState.show }}"
      value="{{ customColorState.value }}"
      title="{{ selectArea }}"
      options="{{ options }}"
      data-state-key="customColorState"
      active-color="#ee0a24"
      bind:close="onClose"
      bind:finish="onFinish"
    />
  </smart-bottom-sheet>
</demo-block>

<demo-block title="{{I18n.t('asynchronousLoadingOptions')}}" class="cascader-demo">
  <smart-field
    value="{{ asyncState.result }}"
    is-link
    readonly
    label="{{I18n.t('region')}}"
    placeholder="{{ selectArea }}"
    data-state-key="asyncState"
    bind:tap="onClick"
  />
  <smart-bottom-sheet
    show="{{ asyncState.show }}"
    max-height="100%"
  >
    <smart-cascader
      wx:if="{{ asyncState.show }}"
      value="{{ asyncState.value }}"
      title="{{ selectArea }}"
      options="{{ asyncState.options }}"
      data-state-key="asyncState"
      bind:close="onClose"
      bind:change="loadDynamicOptions"
      bind:finish="onFinish"
    />
  </smart-bottom-sheet>
</demo-block>

