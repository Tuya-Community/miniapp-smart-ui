/* eslint-disable */
var style = require('../wxs/style.wxs');
var addUnit = require('../wxs/add-unit.wxs');
var wxUtils = require('../wxs/utils.wxs');

function isObj(x) {
  var type = typeof x;
  return x !== null && (type === 'object' || type === 'function');
}

function optionText(options, optionIndex, valueKey) {
  var option = options[optionIndex];
  return isObj(option) && option[valueKey] != null ? option[valueKey] : option;
}

function rootStyle(data) {
  return style({
    height: addUnit(data.itemHeight * data.visibleItemCount),
  });
}

function wrapperStyle(data) {
  var rotate = 20 * data.animationIndex;
  var optionsVIndexList = data.optionsVIndexList;
  var cssVar = optionsVIndexList.reduce((previousValue, currentValue, currentIndex) => {
    previousValue[`--picker-item-content_${currentIndex}`] = `"${currentValue}"`;
    return previousValue;
  }, {});
  return style({
    'text-indent': data.unit ? '-8rpx' : '0',
    transition: data.moving ? 'none' : 'transform ' + (data.duration + 100) + 'ms ease-out',
    'line-height': addUnit(data.itemHeight),
    transform: `rotateX(${rotate}deg)`,
    ...cssVar
  });
}

function wrapperInterStyle(data) {
  var offset = data.renderStart * data.itemHeight;
  offset = addUnit(offset);
  return style({
    'padding-top': offset,
  });
}

function wrapperItemStyle(data) {
  var heightStyleStr = "height: " + data.itemHeight + 'px;'
  var fontStyleStr = style(data.fontStyle);
  var activeStyleStr = style(data.activeStyle);
  var transformStyleStr = style({
    transform: `rotateX(${360 - data.index * 20}deg) translateZ(${data.itemHeight * data.visibleItemCount / 2}px) translateX(-50%);`,
    top: `calc(50% - ${data.itemHeight / 2}px)`,
  });
  return transformStyleStr + ';' + heightStyleStr + (fontStyleStr ? fontStyleStr + ';' : fontStyleStr) + activeStyleStr
}

function wrapperItemClass(data) {
  var staticClass = 'smart-ellipsis';
  var activeClass = 'active-class';
  var isActive = Math.abs(data.renderStart + data.index - data.animationIndex) < 0.9;
  return staticClass + ' ' + wxUtils.bem('picker-column__item', { disabled: data.optionIndex && data.optionIndex.disabled, selected: isActive }) + ' ' + (isActive ? activeClass : '');
}

function wrapperItemTextStyle(data) {
  var fontStyle = data.fontStyle;
  var activeStyle = data.activeStyle;
  var isActive = typeof data.optionIndex === 'number' && Math.abs(data.optionIndex - data.animationIndex) < 0.5;
  return (fontStyle ? fontStyle.replace(';', '') + ';' : '') + (isActive ? activeStyle.replace(';', '') + ';' : '')
}


module.exports = {
  optionText: optionText,
  rootStyle: rootStyle,
  wrapperStyle: wrapperStyle,
  wrapperInterStyle: wrapperInterStyle,
  wrapperItemStyle: wrapperItemStyle,
  wrapperItemClass: wrapperItemClass,
  wrapperItemTextStyle: wrapperItemTextStyle
};
